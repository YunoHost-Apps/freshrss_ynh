#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

if [ -z "$admin" ]; then
	admin=$(ynh_app_setting_get --key=admin_user)
	if [ -z "$admin" ]; then
		ynh_die "no admin user found"
	fi;
	ynh_app_setting_delete --key=admin_user
	ynh_app_setting_set --key=admin --value="$admin"
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir" --keep="data/config.php data/users/ extensions/" #--full_replace

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R "$app":www-data "$install_dir"
#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating $app's configuration files..."

# Create a dedicated PHP-FPM config
ynh_config_add_phpfpm

# Create a dedicated NGINX config
ynh_config_add_nginx

#=================================================
# CRON CONFIGURATION
#=================================================
ynh_script_progression "Upgrading Cron configuration..."

ynh_config_add --template="freshrss.cron" --destination="/etc/cron.d/$app"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown root: "/etc/cron.d/$app"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 644 "/etc/cron.d/$app"

#=================================================
# LOG FILES
#=================================================

if [ -f /tmp/FreshRSS.log ]; then
	ynh_safe_rm "/tmp/FreshRSS.log"
fi

if [ -f "$install_dir/$app.log" ]; then
	ynh_safe_rm "/var/www/$app/$app.log"
fi

log_path="/var/log/$app"
mkdir -p "$log_path"
chown "$app":www-data "$log_path"

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression "Upgrading logrotate configuration..."

# Use logrotate to manage app-specific logfile(s)
ynh_config_add_logrotate

#=================================================
# SETUP FAIL2BAN
#=================================================
ynh_script_progression "Upgrading Fail2Ban configuration..."

# If it doesn't exist, create the logfile, required before configuring fail2ban
if [ ! -f "/var/log/${domain}-access.log" ]; then
	touch "/var/log/${domain}-access.log"
fi

# Create a dedicated Fail2Ban config
ynh_config_add_fail2ban --logpath="/var/log/nginx/${domain}-access.log" --failregex="<HOST> .* \"GET /api/.*\" 401"

#=================================================
# UPGRADING FRESHRSS
#=================================================
ynh_script_progression "Upgrading $app..."

# reconfigure application with latest parameters
ynh_hide_warnings ynh_exec_as_app "$install_dir/cli/reconfigure.php" --default_user "$admin" --auth_type http_auth --environment production --base_url "https://$domain$path" --title FreshRSS --api_enabled --db-type mysql --db-host localhost --db-user "$db_name" --db-password "$db_pwd" --db-base "$db_name"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
